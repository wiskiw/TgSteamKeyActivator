'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatch = undefined;

var _detectNode = require('detect-node');

var _detectNode2 = _interopRequireDefault(_detectNode);

var _redux = require('redux');

var _reduxMost = require('redux-most');

var _mtprotoLogger = require('mtproto-logger');

var _mtprotoLogger2 = _interopRequireDefault(_mtprotoLogger);

var _reducer = require('./reducer');

var _reducer2 = _interopRequireDefault(_reducer);

var _epic = require('./epic');

var _epic2 = _interopRequireDefault(_epic);

var _signal = require('./signal');

var _middleware = require('./middleware');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = _mtprotoLogger2.default`redux-core`;
// import { composeWithDevTools } from 'remote-redux-devtools'


var composeEnhancers = _redux.compose;

if (_detectNode2.default === false && typeof window === 'object') composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose;

// composeEnhancers = composeWithDevTools({
//   realtime: true,
//   hostname: 'localhost',
//   port    : 8000,
//   maxAge  : 200
// })
function configureStore(rootReducer, initialState) {
  var epicMiddleware = (0, _reduxMost.createEpicMiddleware)(_epic2.default);
  var enhancers = composeEnhancers((0, _redux.applyMiddleware)(_middleware.skipEmptyMiddleware,
  // debounceMiddleware,
  epicMiddleware));

  var store = (0, _redux.createStore)(rootReducer, initialState, enhancers);

  return store;
}

var store = configureStore(_reducer2.default, {});

store.subscribe(() => _signal.rootSignal.next(store.getState()));

exports.default = store;
var dispatch = exports.dispatch = store.dispatch;
//# sourceMappingURL=core.js.map