{"version":3,"sources":["../../../src/state/reducer/index.js"],"names":["active","ACTIVATED","uid","SWITCH_ON","state","payload","messageHistory","DONE_REQUEST","data","result","thread","messages","rest","direction","SEND","id","message","msg_id","seqNo","seq_no","homeDc","mainReducer","_","networker","request"],"mappings":";;;;;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AAEA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,6BAAc;AAC3B;AACA,GAAC,aAAKC,SAAN,GAAkB,MAAM;AAFG,CAAd,EAGZ,KAHY,CAAf;;AAKA,IAAMC,MAAM,6BAAc;AACxB;AACA,GAAC,aAAKC,SAAN,GAAkB,CAACC,KAAD,EAAQC,OAAR,KAA4BA;AAFtB,CAAd,EAGT,GAHS,CAAZ;;AAKA,IAAMC,iBAAiB,6BAAc;AACnC;AACA,GAAC,YAAIC,YAAL,GAAoB,CAACH,KAAD,EAA0BI,IAA1B,KAAkE;AACpF;AACA,QAAM,EAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,KAAwCH,IAA9C;AAAA,QAAqCI,IAArC,4BAA8CJ,IAA9C;AACA;AACA;AACA,WAAO,mBAAO;AACZG,cADY;AAEZE,iBAAW,IAFC,EAAP,EAEcT,KAFd,CAAP;AAGD,GAVkC;AAWnC;AACA,GAAC,YAAIU,IAAL,GAAY,CAACV,KAAD,EAA0BC,OAA1B,KACV,mBAAO;AACLU,QAAWV,QAAQW,OAAR,CAAgBC,MADtB;AAELC,WAAWb,QAAQW,OAAR,CAAgBG,MAFtB;AAGLN,eAAW,KAHN,EAAP,EAGsBT,KAHtB;AAbiC,CAAd,EAiBpB,EAjBoB,CAAvB;;AAmBA,IAAMgB,SAAS,6BAAc,EAAd,EAEZ,CAFY,CAAf;;AAIA,IAAMC,cAAc,4BAAgB;AAClCC,KAAG,MAAM,IADyB;AAElCtB,QAFkC;AAGlCoB,QAHkC;AAIlClB,KAJkC;AAKlCI,gBALkC;AAMlCiB,qCANkC;AAOlCC;AAPkC,CAAhB,CAApB;;kBAUeH,W","file":"index.js","sourcesContent":["//@flow\n\nimport { combineReducers } from 'redux'\nimport { createReducer } from 'redux-act'\nimport { append } from 'ramda'\n\nimport { type MessageHistory } from '../index.h'\nimport { MAIN, NET, API } from '../action'\nimport { type NetIncomingData } from '../action'\nimport { type TaskEndData } from '../epic/task'\n\nimport networker from './networker-state'\nimport request from './request'\n\nconst active = createReducer({\n  //$FlowIssue\n  [MAIN.ACTIVATED]: () => true,\n}, false)\n\nconst uid = createReducer({\n  //$FlowIssue\n  [MAIN.SWITCH_ON]: (state, payload: string) => payload,\n}, ' ')\n\nconst messageHistory = createReducer({\n  //$FlowIssue\n  [API.DONE_REQUEST]: (state: MessageHistory[], data: NetIncomingData & TaskEndData) => {\n    // console.log(data)\n    const { result, thread, messages, ...rest } = data\n    // console.log(result)\n    // console.log(rest)\n    return append({\n      messages,\n      direction: 'in' }, state)\n  },\n  //$FlowIssue\n  [NET.SEND]: (state: MessageHistory[], payload) =>\n    append({\n      id       : payload.message.msg_id,\n      seqNo    : payload.message.seq_no,\n      direction: 'out' }, state),\n}, [])\n\nconst homeDc = createReducer({\n\n}, 2)\n\nconst mainReducer = combineReducers({\n  _: () => true,\n  active,\n  homeDc,\n  uid,\n  messageHistory,\n  networker,\n  request,\n})\n\nexport default mainReducer\n"]}