'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounceMiddleware = exports.skipEmptyMiddleware = undefined;

var _most = require('most');

var _mtprotoLogger = require('mtproto-logger');

var _mtprotoLogger2 = _interopRequireDefault(_mtprotoLogger);

var _property = require('../property');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = _mtprotoLogger2.default`redux-core`;

var skipEmptyMiddleware = exports.skipEmptyMiddleware = store => next => action => {
  if (Array.isArray(action.payload) && action.payload.length === 0) log`skip empty`(action.type);else return next(action);
};

var debounceMiddleware = exports.debounceMiddleware = ({ dispatch }) => next => {
  var actionStream = (0, _property.subject)({ type: '', payload: {} });
  actionStream.tap(log`action`).map(action => {
    if (action.meta == null)
      //$FlowIssue
      action.meta = {};
    action.meta.debounced = true;
    return action;
  }).concatMap(val => (0, _most.of)(val).delay(50)).observe(dispatch);
  return action => {
    if (action.meta && action.meta.debounced) return next(action);
    return actionStream.next(action);
  };
};
//# sourceMappingURL=middleware.js.map