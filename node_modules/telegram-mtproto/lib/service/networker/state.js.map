{"version":3,"sources":["../../../src/service/networker/state.js"],"names":["Pool","sent","Map","pending","resend","Set","addResend","msg_id","add","hasResends","size","deleteResent","delete","getResends","values","addSent","message","set","getSent","get","hasSent","has","deleteSent","sentIterator","entries","setPending","value","hasPending","deletePending","pendingIterator"],"mappings":";;;;;;AAIA;;AAMA,MAAMA,IAAN,CAAW;AAAA;AAAA,SACTC,IADS,GACU,IAAIC,GAAJ,EADV;AAAA,SAETC,OAFS,GAEa,IAAID,GAAJ,EAFb;AAAA,SAGTE,MAHS,GAGW,IAAIC,GAAJ,EAHX;AAAA;;AAITC,YAAUC,MAAV,EAA0B;AACxB,WAAO,KAAKH,MAAL,CAAYI,GAAZ,CAAgBD,MAAhB,CAAP;AACD;AACDE,eAAa;AACX,WAAO,KAAKL,MAAL,CAAYM,IAAZ,GAAmB,CAA1B;AACD;AACDC,eAAaJ,MAAb,EAA6B;AAC3B,WAAO,KAAKH,MAAL,CAAYQ,MAAZ,CAAmBL,MAAnB,CAAP;AACD;AACDM,eAAa;AACX,WAAO,KAAKT,MAAL,CAAYU,MAAZ,EAAP;AACD;;AAGDC,UAAQC,OAAR,EAA6B;AAC3B,SAAKf,IAAL,CAAUgB,GAAV,CAAcD,QAAQT,MAAtB,EAA8BS,OAA9B;AACD;AACDE,UAAQX,MAAR,EAAoC;AAClC;AACA,WAAO,KAAKN,IAAL,CAAUkB,GAAV,CAAcZ,MAAd,CAAP;AACD;AACDa,UAAQb,MAAR,EAAwB;AACtB,WAAO,KAAKN,IAAL,CAAUoB,GAAV,CAAcd,MAAd,CAAP;AACD;AACDe,aAAWN,OAAX,EAAgC;AAC9B,WAAO,KAAKf,IAAL,CAAUW,MAAV,CAAiBI,QAAQT,MAAzB,CAAP;AACD;AACDgB,iBAAe;AACb,WAAO,KAAKtB,IAAL,CAAUuB,OAAV,EAAP;AACD;;AAEDC,aAAWlB,MAAX,EAA2BmB,QAAgB,CAA3C,EAA8C;AAC5C,WAAO,KAAKvB,OAAL,CAAac,GAAb,CAAiBV,MAAjB,EAAyBmB,KAAzB,CAAP;AACD;AACDC,aAAWpB,MAAX,EAA2B;AACzB,WAAO,KAAKJ,OAAL,CAAakB,GAAb,CAAiBd,MAAjB,CAAP;AACD;AACDqB,gBAAcrB,MAAd,EAA8B;AAC5B,WAAO,KAAKJ,OAAL,CAAaS,MAAb,CAAoBL,MAApB,CAAP;AACD;AACDsB,oBAAkB;AAChB,WAAO,KAAK1B,OAAL,CAAaqB,OAAb,EAAP;AACD;AA9CQ;;AARX;;kBAyDexB,I","file":"state.js","sourcesContent":["//@flow\n\n// import Promise from 'bluebird'\n\nimport { NetMessage } from './net-message'\n\ntype MessageMap = Map<string, NetMessage>\ntype PendingMap = Map<string, number>\ntype ResendSet = Set<string>\n\nclass Pool {\n  sent: MessageMap = new Map()\n  pending: PendingMap = new Map()\n  resend: ResendSet = new Set()\n  addResend(msg_id: string) {\n    return this.resend.add(msg_id)\n  }\n  hasResends() {\n    return this.resend.size > 0\n  }\n  deleteResent(msg_id: string) {\n    return this.resend.delete(msg_id)\n  }\n  getResends() {\n    return this.resend.values()\n  }\n\n\n  addSent(message: NetMessage) {\n    this.sent.set(message.msg_id, message)\n  }\n  getSent(msg_id: string): NetMessage {\n    //$FlowIssue\n    return this.sent.get(msg_id)\n  }\n  hasSent(msg_id: string) {\n    return this.sent.has(msg_id)\n  }\n  deleteSent(message: NetMessage) {\n    return this.sent.delete(message.msg_id)\n  }\n  sentIterator() {\n    return this.sent.entries()\n  }\n\n  setPending(msg_id: string, value: number = 0) {\n    return this.pending.set(msg_id, value)\n  }\n  hasPending(msg_id: string) {\n    return this.pending.has(msg_id)\n  }\n  deletePending(msg_id: string) {\n    return this.pending.delete(msg_id)\n  }\n  pendingIterator() {\n    return this.pending.entries()\n  }\n}\n\nexport default Pool"]}