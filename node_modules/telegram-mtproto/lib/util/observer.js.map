{"version":3,"sources":["../../src/util/observer.js"],"names":["log","Observer","next","error","complete","stream","try","streamNext","map","val","tap","data","isStream","awaitPromises","chain","recoverWith","observe","x","then"],"mappings":";;;;;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;AACA,IAAMA,MAAM,uBAAO,UAAnB;;AASA;AACA,SAASC,QAAT,CAAqB,EAAEC,IAAF,EAAQC,KAAR,EAAeC,QAAf,EAArB,EAA+D;AAC7D;AACA,SAAQC,MAAD,IACL;AAKU;AALV,GAASC,GAAT,CAAa,MAAM;AACjB,QAAMC,aACJF,OACGG,GADH,CAEIC,OAAO,mBAEJH,GAFI,CAEA,MAAMJ,KAAKO,GAAL,CAFN,EAGJC,GAHI,CAGAC,QAAQ;AACX,UAAIC,SAASD,IAAT,MAAmB,KAAvB,EACEN,OAAOD,QAAP,CAAgBO,IAAhB;AACH,KANI,CAFX,EASGE,aATH,EADF;AAWA,WAAON,WACJO,KADI,CACEL,OAAOG,SAASH,GAAT,IAAgBA,GAAhB,GAAsB,cAAGA,GAAH,CAD/B,EAEJM,WAFI,CAEQZ,KAFR;AAGL;AAHK,KAIJa,OAJI,CAIIC,KAAKA,CAJT,CAAP;AAKD,GAjBD,EAiBGC,IAjBH,CAiBQd,QAjBR,CADF;AAmBD;;AAED,SAASQ,QAAT,CAAkBH,GAAlB,EAAwC;AACtC,SAAOA,2BAAP;AACD;;kBAEcR,Q","file":"observer.js","sourcesContent":["//@flow\n\nimport Bluebird from 'bluebird'\nimport { Stream, of } from 'most'\n\nimport Logger from 'mtproto-logger'\nimport { type HoldSubject } from '../property'\nconst log = Logger`observer`\n\ntype Observable<T> = {\n  //$FlowIssue\n  next(val: mixed): Stream<T>,\n  error(err: Error): Stream<T>,\n  complete(val: mixed): Promise<T>,\n}\n\n//$FlowIssue\nfunction Observer<T>({ next, error, complete }: Observable<T>) {\n  //$FlowIssue\n  return (stream: HoldSubject<T>) =>\n    Bluebird.try(() => {\n      const streamNext: Stream<T | Stream<T>> =\n        stream\n          .map(\n            val => Bluebird\n              //$FlowIssue\n              .try(() => next(val))\n              .tap(data => {\n                if (isStream(data) === false)\n                  stream.complete(data)\n              }))\n          .awaitPromises()\n      return streamNext\n        .chain(val => isStream(val) ? val : of(val))\n        .recoverWith(error)\n        // .tap(log`after recover`)\n        .observe(x => x)\n    }).then(complete)\n}\n\nfunction isStream(val): boolean %checks {\n  return val instanceof Stream\n}\n\nexport default Observer\n"]}