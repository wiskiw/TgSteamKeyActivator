{"version":3,"sources":["../src/property.js"],"names":["subject","Property","name","value","plainStream","property","next"],"mappings":";;;;;QAsCgBA,O,GAAAA,O;;AApChB;;AACA;;AAyBA;AACA;;AAEA,SAASC,QAAT,CAAqBC,IAArB,EAAmCC,KAAnC,EAA6D;AAC3D,MAAMC,cAA0B,yBAAhC;AACA,MAAMC,WAA2B,uBAAK,CAAL,EAAQD,WAAR,CAAjC;AACAC,WAASC,IAAT,CAAcH,KAAd;AACA,SAAOE,QAAP;AACD;;AAEM,SAASL,OAAT,CAAoBG,KAApB,EAA8C;AACnD,MAAMC,cAA8B,yBAApC;AACA,SAAOA,WAAP;AACD;;kBAEcH,Q","file":"property.js","sourcesContent":["//@flow\n\nimport { async, hold } from 'most-subject'\nimport { Stream, Sink, Source } from 'most'\ninterface HoldSubjectSource<T> extends Source<T>, Sink<T> { }\ninterface SubjectT<T> {\n  +source: Source<T> & Sink<T>,\n\n  next (value: T): Subject<T>,\n  error <Err: Error> (err: Err): Subject<T>,\n  complete (value?: T): Subject<T>,\n}\n\ntype Subject<T> = Stream<T> | SubjectT<T>\n\ntype HoldSubjectT<T> = {\n  source: HoldSubjectSource<T>,\n\n  next (value: T): HoldSubject<T>,\n  error <Err: Error> (err: Err): HoldSubject<T>,\n  complete (value?: T): HoldSubject<T>,\n}\n\nexport interface HoldSubject<T> extends Stream<T>, HoldSubjectT<T>, SubjectT<T> { }\n\ntype Hold = <T>(bufferSize: number, subject: Subject<T>) => HoldSubject<T>\ntype Async = <T>() => Subject<T>\n\n(async: Async);\n(hold: Hold)\n\nfunction Property<T>(name: string, value: T): HoldSubject<T> {\n  const plainStream: Subject<T> = async()\n  const property: HoldSubject<T> = hold(1, plainStream)\n  property.next(value)\n  return property\n}\n\nexport function subject<T>(value: T): HoldSubject<T> {\n  const plainStream: HoldSubject<T> = async()\n  return plainStream\n}\n\nexport default Property\n\n"]}