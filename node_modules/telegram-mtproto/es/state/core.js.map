{"version":3,"sources":["../../src/state/core.js"],"names":["isNode","createStore","applyMiddleware","compose","createEpicMiddleware","Logger","log","rootReducer","rootEpic","rootSignal","skipEmptyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","epicMiddleware","enhancers","store","subscribe","next","getState","dispatch"],"mappings":"AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,IAAMC,MAAMD,MAAO,YAAnB;;AAEA,OAAOE,WAAP,MAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,mBAAT,QAAoC,cAApC;;AAEA,IAAIC,mBAAmBR,OAAvB;;AAEA,IAAIH,WAAW,KAAX,IAAoB,OAAOY,MAAP,KAAkB,QAA1C,EACED,mBACEC,OAAOC,oCAAP,IAA+CV,OADjD;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,cAAT,CAAwBP,WAAxB,EAAwCQ,YAAxC,EAAyD;AACvD,MAAMC,iBAAiBZ,qBAAqBI,QAArB,CAAvB;AACA,MAAMS,YAAYN,iBAChBT,gBACEQ,mBADF;AAEE;AACAM,gBAHF,CADgB,CAAlB;;AAQA,MAAME,QAAQjB,YACZM,WADY,EAEZQ,YAFY,EAGZE,SAHY,CAAd;;AAKA,SAAOC,KAAP;AACD;;AAED,IAAMA,QAAQJ,eAAeP,WAAf,EAA4B,EAA5B,CAAd;;AAEAW,MAAMC,SAAN,CACE,MAAMV,WAAWW,IAAX,CAAgBF,MAAMG,QAAN,EAAhB,CADR;;AAIA,eAAeH,KAAf;;AAEA,OAAO,IAAMI,WAAWJ,MAAMI,QAAvB","file":"core.js","sourcesContent":["//@flow\nimport isNode from 'detect-node'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { createEpicMiddleware } from 'redux-most'\n// import { composeWithDevTools } from 'remote-redux-devtools'\nimport Logger from 'mtproto-logger'\nconst log = Logger`redux-core`\n\nimport rootReducer from './reducer'\nimport rootEpic from './epic'\nimport { rootSignal } from './signal'\nimport { skipEmptyMiddleware } from './middleware'\n\nlet composeEnhancers = compose\n\nif (isNode === false && typeof window === 'object')\n  composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n// composeEnhancers = composeWithDevTools({\n//   realtime: true,\n//   hostname: 'localhost',\n//   port    : 8000,\n//   maxAge  : 200\n// })\nfunction configureStore(rootReducer: *, initialState: *) {\n  const epicMiddleware = createEpicMiddleware(rootEpic)\n  const enhancers = composeEnhancers(\n    applyMiddleware(\n      skipEmptyMiddleware,\n      // debounceMiddleware,\n      epicMiddleware\n    )\n  )\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    enhancers)\n\n  return store\n}\n\nconst store = configureStore(rootReducer, {})\n\nstore.subscribe(\n  () => rootSignal.next(store.getState())\n)\n\nexport default store\n\nexport const dispatch = store.dispatch\n"]}