import 'axios';

import { NetMessage } from '../../service/networker/net-message';
import { NetworkerThread } from '../../service/networker';
import ApiRequest from '../../service/main/request';
import '../helpers';
import { doubleCreator } from '../helpers';

export var MAIN = {
  TEST: doubleCreator('test'),
  INIT: doubleCreator('init'),
  SWITCH_ON: doubleCreator('module loaded'),
  ACTIVATED: doubleCreator('instance activated')
};

var networkerMeta = (_, dc) => ({ _: 'networker', id: dc });
var apiMeta = (_, id) => ({ _: 'api', id });


export var NET = {
  SEND: doubleCreator('net/send', networkerMeta),
  RECEIVE_RESPONSE: doubleCreator('net/response'),
  NETWORK_ERROR: doubleCreator('net/error')
};

export var AUTH = {
  SET_AUTH_KEY: doubleCreator('auth/auth_key set', networkerMeta),
  SET_SERVER_SALT: doubleCreator('auth/server_salt set', networkerMeta),
  SET_SESSION_ID: doubleCreator('auth/session_id set', networkerMeta)
};

export var NETWORKER_STATE = {
  RESEND: {
    ADD: doubleCreator('networker/resend add', networkerMeta),
    DEL: doubleCreator('networker/resend delete', networkerMeta)
  },
  SENT: {
    ADD: doubleCreator('networker/sent add', networkerMeta),
    DEL: doubleCreator('networker/sent delete', networkerMeta)
  },
  PENDING: {
    ADD: doubleCreator('networker/pending add', networkerMeta),
    DEL: doubleCreator('networker/pending delete', networkerMeta)
  }
};

export var API = {
  NEW_REQUEST: doubleCreator('api/request new', apiMeta),
  DONE_REQUEST: doubleCreator('api/request done', apiMeta),
  CALL_TASK: doubleCreator('api/call-task new'),
  CALL_RESULT: doubleCreator('api/call-task done')
};
//# sourceMappingURL=index.js.map