import uuid from 'uuid/v4';
import EventEmitter from 'eventemitter2';

import { ApiManager } from '../api-manager';
import Layout from '../../layout';

import configNormalization from './config-normalization';
import { registerInstance } from '../../config-provider';
import State from './state';

import Logger from 'mtproto-logger';
var log = Logger`main`;

import parseServerConfig from '../../config-check/dc';
import streamBus from '../../event/stream-bus';
import { ScopedEmitter } from '../../event';
import '../../plugins/index.h';
import '../../tl/index.h';
import './index.h';
import 'eventemitter2';
import { dispatch } from '../../state/core';
import { MAIN } from '../../state/action';

var generateLayers = (api, mt) => ({
  apiLayer: new Layout(api),
  mtLayer: new Layout(mt)
});

class MTProto {
  constructor(config) {
    this.emitter = new EventEmitter({
      wildcard: true
    });
    this.on = this.emitter.on.bind(this.emitter);
    this.emit = this.emitter.emit.bind(this.emitter);
    this.state = new State();
    this.defaultDC = 2;

    var uid = uuid();
    dispatch(MAIN.INIT(uid));
    var fullConfig = configNormalization(config);
    var dcMap = parseServerConfig(config.server);
    this.config = fullConfig;
    var { apiLayer, mtLayer } = generateLayers(this.config.schema, this.config.mtSchema);
    this.uid = uid;
    registerInstance({
      uid,
      signIn: false,
      emit: this.emit,
      rootEmitter: new ScopedEmitter(uid, this.emitter),
      schema: {
        apiSchema: fullConfig.schema,
        mtSchema: fullConfig.mtSchema
      },
      layer: {
        apiLayer,
        mtLayer
      },
      dcMap
    });
    this.uid = uid;
    this.storage = fullConfig.app.storage;
    this.api = new ApiManager(fullConfig, uid);
    this.emitter.on('*', (data, ...rest) => {
      log('event')(data);
      if (rest.length > 0) log('event', 'rest')(rest);
    });
    this.bus = streamBus(this);
    setTimeout(() => dispatch(MAIN.SWITCH_ON(uid)), 3e1);
  }
}

export default MTProto;
//# sourceMappingURL=index.js.map