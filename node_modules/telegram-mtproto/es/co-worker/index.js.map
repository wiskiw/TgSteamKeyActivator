{"version":3,"sources":["../../src/co-worker/index.js"],"names":["Webworker","CryptoBin","getCrypto","common","cryptoWorker","useWorker","use","webworker","webWorker","of","factorize","args","run","modPow","err"],"mappings":"AAEA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAIA,IAAMC,YAAaC,MAAD,IAAoB;AACpC,MAAMC,eAAeH,WAArB;AACA,MAAII,YAAYF,OAAOG,GAAP,CAAWC,SAA3B;AACA,MAAIF,SAAJ,EAAe;AACb,QAAI;AACF,UAAMG,YAAYR,UAAUS,EAAV,EAAlB;AACA,UAAMC,YACHC,IAAD,IAAUH,UAAUI,GAAV,CAAc,WAAd,EAA2BD,IAA3B,CADZ;;AAGA,UAAME,SACHF,IAAD,IAAUH,UAAUI,GAAV,CAAc,SAAd,EAAyBD,IAAzB,CADZ;;AAGAP,mBAAaM,SAAb,GAAyBA,SAAzB;AACAN,mBAAaS,MAAb,GAAsBA,MAAtB;AACD,KAVD,CAUE,OAAOC,GAAP,EAAY;AACZT,kBAAY,KAAZ;AACD;AACF;AACDF,SAAOG,GAAP,CAAWC,SAAX,GAAuBF,SAAvB;;AAEA,SAAOD,YAAP;AACD,CArBD;;AAuBA,eAAeF,SAAf","file":"index.js","sourcesContent":["//@flow\n\nimport Webworker from './web-worker'\nimport CryptoBin from './crypto-bin'\nimport type { Common } from '../config-provider'\nimport type { FactorizeFunc, ModPowFunc } from './index.h'\n\nconst getCrypto = (common: Common) => {\n  const cryptoWorker = CryptoBin()\n  let useWorker = common.use.webworker\n  if (useWorker) {\n    try {\n      const webWorker = Webworker.of()\n      const factorize: FactorizeFunc =\n        (args) => webWorker.run('factorize', args)\n\n      const modPow: ModPowFunc =\n        (args) => webWorker.run('mod-pow', args)\n\n      cryptoWorker.factorize = factorize\n      cryptoWorker.modPow = modPow\n    } catch (err) {\n      useWorker = false\n    }\n  }\n  common.use.webworker = useWorker\n\n  return cryptoWorker\n}\n\nexport default getCrypto\n"]}