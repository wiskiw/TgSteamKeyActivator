{"version":3,"sources":["../src/debug.js"],"names":["Debug","fmt","setLogger","customLogger","log"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,OAAO,MAAMC,YAAaC,YAAD,IAA4B;AACnDH,QAAMI,GAAN,GAAYD,YAAZ;AACD,CAFM;;AAIP;;;;;;;;;;;;;;;;;AAiBAD,UAAUD,IAAID,MAAMI,GAAV,CAAV;;AAEA,eAAeJ,KAAf","file":"debug.js","sourcesContent":["//@flow\n\nimport Debug from 'debug'\n// import isNode from 'detect-node'\nimport fmt from './formatter'\n\nexport const setLogger = (customLogger: Function) => {\n  Debug.log = customLogger\n}\n\n/*function formatArgs(args: string[]) {\n  const name = this.namespace\n  const useColors = this.useColors\n\n  if (useColors) {\n    const c = this.color\n    const prefix = `\\u001b[3${c};1m${name} \\u001b[0m`\n\n    args[0] = prefix + args[0].split('\\n').join(`\\n${prefix}`)\n    args.push(`\\u001b[3${c}m+${exports.humanize(this.diff)}\\u001b[0m`)\n  } else {\n    args[0] = `${new Date().toUTCString()} ${name} ${args[0]}`\n  }\n}\n\nDebug.formatArgs = formatArgs*/\n\nsetLogger(fmt(Debug.log))\n\nexport default Debug\n"]}