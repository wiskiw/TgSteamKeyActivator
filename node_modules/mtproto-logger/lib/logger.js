'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _sheduler = require('./sheduler');

var _sheduler2 = _interopRequireDefault(_sheduler);

var _stringTransform = require('./string-transform');

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

var _disabled = require('./disabled');

var _disabled2 = _interopRequireDefault(_disabled);

var _mtprotoShared = require('mtproto-shared');

require('./index.h');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Logger = (moduleName, ...rest) => {
  const fullModule = (0, _stringTransform.makeModuleName)([moduleName, rest]);
  fullModule.unshift('telegram-mtproto');
  const fullname = fullModule.join(':');
  const padding = Array(fullname.length - 17 + 1).fill(' ').join('');
  const debug = (0, _debug2.default)(fullname);
  const logFunction = (tag, objects) => {
    const time = (0, _stringTransform.makeTime)((0, _mtprotoShared.dTimePure)());
    (0, _mtprotoShared.immediate)(_sheduler2.default.add, debug, time, tag, objects, padding);
  };

  const logGroup = function (name) {
    const padding = Math.min(Math.max(name.length + 1, 3), 8);
    const padString = `*${Array(padding - 2).fill(' ').join('')}*`;
    const pack = [() => logger(`#GROUP`)((0, _stringTransform.makeGroupHeader)(name)), () => logger(padString)('')];
    function groupPrinter(...tags) {
      const tagStr = (0, _stringTransform.makeTags)([padString, tags]);
      return (...objects) => {
        pack.push(() => logFunction(tagStr, objects));
      };
    }
    groupPrinter.groupEnd = function () {
      pack.push(() => logger(`~GROUP`)('-   -   -   -  \n'));
      pack.forEach(fn => fn());
    };
    return groupPrinter;
  };
  function loggerFn(...tags) {
    const tagStr = (0, _stringTransform.makeTags)(tags);
    return (...objects) => logFunction(tagStr, objects);
  }
  loggerFn.group = logGroup;

  const logger = loggerFn;

  return debug.enabled ? logger : _disabled2.default;
};

exports.default = Logger;
//# sourceMappingURL=logger.js.map