'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeGroupHeader = exports.makeTags = exports.makeTime = exports.makeModuleName = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _arrayFlatten = require('array-flatten');

var _arrayFlatten2 = _interopRequireDefault(_arrayFlatten);

var _mtprotoShared = require('mtproto-shared');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const brackets = {
  open: _chalk2.default.gray('['),
  close: _chalk2.default.gray(']')
};

const createGroupHeader = str => {
  const text = str.trim().toUpperCase();
  const colorfull = _chalk2.default.bold(_chalk2.default.magenta(text));
  const result = `--- ---  ${colorfull}  --- ---`;
  return result;
};

const noOpNormalizeTag = str => {
  const trimmed = str.trim();
  if (trimmed === '') return '';
  if (trimmed.indexOf('|') !== -1) return Array(trimmed.length + 2).fill(' ').join('');
  const colorfull = _chalk2.default.bold(_chalk2.default.blue(trimmed));
  const enclosed = `${brackets.open}${colorfull}${brackets.close}`;
  return enclosed;
};

const mapToString = str => typeof str === 'string' ? str : str.toString();

const flatSplit = (acc, val) => {
  acc.push(...val.split(','));
  return acc;
};

const normalizeTags = list => {
  const flatList = (0, _arrayFlatten2.default)(list);
  const result = flatList.map(mapToString).reduce(flatSplit, []).map(noOpNormalizeTag).join(''); //eslint-disable-line
  return result;
};

const trimReject = (acc, val) => {
  const result = val.trim();
  if (result !== '') acc.push(result);
  return acc;
};

const makeModuleName = exports.makeModuleName = list => {
  const flatList = (0, _arrayFlatten2.default)(list);
  const result = flatList.map(mapToString).reduce(flatSplit, []).reduce(trimReject, []); //eslint-disable-line
  return result;
};

const makeTime = exports.makeTime = time => _chalk2.default.gray(_chalk2.default.italic(time));

const makeTags = exports.makeTags = (0, _mtprotoShared.memoize)(normalizeTags);

const makeGroupHeader = exports.makeGroupHeader = (0, _mtprotoShared.memoize)(createGroupHeader);
//# sourceMappingURL=string-transform.js.map