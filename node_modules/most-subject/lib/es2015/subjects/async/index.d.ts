import { Stream, Source, Sink } from 'most';
import { Subject } from '../../interfaces';
export declare function async<T>(): AsyncSubject<T>;
export declare function asAsync<T>(stream: Stream<T>): AsyncSubject<T>;
export declare class AsyncSubject<T> extends Stream<T> implements Subject<T> {
    source: Source<T> & Sink<T>;
    constructor(source: Source<T> & Sink<T>);
    next(value: T): this;
    error<Err extends Error>(err: Err): this;
    complete(value?: T): this;
}
