var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Stream, never, defaultScheduler, PropagateTask } from 'most';
import { MulticastSource } from '@most/multicast';
export function async() {
    return asAsync(never());
}
export function asAsync(stream) {
    return new AsyncSubject(new MulticastSource(stream.source));
}
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject(source) {
        return _super.call(this, source) || this;
    }
    AsyncSubject.prototype.next = function (value) {
        defaultScheduler.asap(PropagateTask.event(value, this.source));
        return this;
    };
    AsyncSubject.prototype.error = function (err) {
        defaultScheduler.asap(PropagateTask.error(err, this.source));
        return this;
    };
    AsyncSubject.prototype.complete = function (value) {
        defaultScheduler.asap(PropagateTask.end(value, this.source));
        return this;
    };
    return AsyncSubject;
}(Stream));
export { AsyncSubject };
//# sourceMappingURL=index.js.map