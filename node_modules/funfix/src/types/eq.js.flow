/*
 * Copyright (c) 2017 by The Funfix Project Developers.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* @flow */

import type { Constructor } from "./kinds"

export interface Eq<A> {
  eqv(lh: A, rh: A): boolean;

  // Implements TypeClass<F>
  static +_funTypeId: string;
  static +_funSupertypeIds: string[];
  static +_funErasure: Eq<any>;
}

export interface EqLaws<A> {
  +F: Eq<A>;

  reflexive(a: A): boolean;
  symmetric(x: A, y: A): boolean;
  transitive(x: A, y: A, z: A): boolean;
}

declare export function eqOf<F>(c: Constructor<F>): Eq<F>;
declare export function eqLawsOf<A>(instance: Eq<A>): EqLaws<A>;
